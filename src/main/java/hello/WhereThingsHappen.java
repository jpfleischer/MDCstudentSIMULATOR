/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hello;

import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import java.awt.Insets;
import java.awt.Color;
import java.awt.Component;
import java.awt.Graphics;
import java.awt.FlowLayout;
import java.awt.Image;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.JProgressBar;
import javax.swing.UIManager;
import javax.swing.plaf.ColorUIResource;

/**
 *
 * @author Sledgehammer
 */
public class WhereThingsHappen extends javax.swing.JFrame {
private static class RoundedBorder implements Border {

    private int radius;


    RoundedBorder(int radius) {
        this.radius = radius;
    }


    @Override
    public Insets getBorderInsets(Component c) {
        return new Insets(this.radius+1, this.radius+1, this.radius+2, this.radius);
    }


    @Override
    public boolean isBorderOpaque() {
        return true;
    }

    
    @Override
    public void paintBorder(Component c, Graphics g, int x, int y, int width, int height) {
        g.drawRoundRect(x, y, width-1, height-1, radius, radius);
    }
}
    /**
     * Creates new form WhereThingsHappen
     */
    WhichCharacter instancechar = WhichCharacter.getInstance();
    int theretrieved = instancechar.retrieve();
    String thename = instancechar.retrievename();
    int thehappy = 50;
    int day = 1;
    int thegrades = 75;
    int howmanytimeswindowfocused = 0;
    public WhereThingsHappen() {
        initComponents();
        setLocationRelativeTo(null);
        this.setTitle("MDCstudentSIMULATOR - " + thename + "'s College Life");
        if (theretrieved == 0){
        try {
                charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/bluedude.png"))));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        if (theretrieved == 1){
        try {
                charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/pinkdude.png"))));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        if (theretrieved == 2){
        try {
                charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/yellowdude.png"))));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        happinessmeter = new javax.swing.JProgressBar();
        gradeicon = new javax.swing.JLabel();
        daynumbertext = new javax.swing.JLabel();
        gradestext = new javax.swing.JLabel();
        happinesstext = new javax.swing.JLabel();
        calendar = new javax.swing.JLabel();
        charactermiddle = new javax.swing.JLabel();
        vidyaButton = new javax.swing.JButton();
        studyButton = new javax.swing.JButton();
        partayButton = new javax.swing.JButton();
        lectureButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1366, 768));
        setResizable(false);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setLayout(null);

        happinessmeter.setForeground(new java.awt.Color(0, 255, 0));
        happinessmeter.setToolTipText("Your amount of happiness.");
        happinessmeter.setValue(50);
        happinessmeter.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        happinessmeter.setName(""); // NOI18N
        happinessmeter.setString("");
        jPanel1.add(happinessmeter);
        happinessmeter.setBounds(20, 650, 290, 50);
        ColorUIResource colorResource = new ColorUIResource(Color.blue.darker().darker());
        UIManager.put("nimbusOrange", colorResource);

        gradeicon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gradeB.png"))); // NOI18N
        gradeicon.setToolTipText("Here's this anxiety-inducing letter.");
        jPanel1.add(gradeicon);
        gradeicon.setBounds(1100, 430, 250, 280);

        daynumbertext.setFont(new java.awt.Font("Segoe UI Black", 0, 48)); // NOI18N
        daynumbertext.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        daynumbertext.setText("1");
        jPanel1.add(daynumbertext);
        daynumbertext.setBounds(1260, 70, 60, 50);

        gradestext.setBackground(new java.awt.Color(255, 255, 255));
        gradestext.setFont(new java.awt.Font("Press Start 2P", 0, 12)); // NOI18N
        gradestext.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gradestext.setText("CURRENT AVG. GRADE");
        gradestext.setOpaque(true);
        jPanel1.add(gradestext);
        gradestext.setBounds(1050, 700, 290, 40);

        happinesstext.setBackground(new java.awt.Color(255, 255, 255));
        happinesstext.setFont(new java.awt.Font("Press Start 2P", 0, 12)); // NOI18N
        happinesstext.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        happinesstext.setText("HAPPINESS METER");
        happinesstext.setOpaque(true);
        jPanel1.add(happinesstext);
        happinesstext.setBounds(20, 700, 290, 40);

        calendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/calendar.png"))); // NOI18N
        jPanel1.add(calendar);
        calendar.setBounds(1230, 0, 160, 160);
        jPanel1.add(charactermiddle);
        charactermiddle.setBounds(480, 210, 420, 560);

        vidyaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vidyagame.png"))); // NOI18N
        vidyaButton.setToolTipText("Realize that the fun of video games has been long gone since your childhood.");
        vidyaButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        vidyaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vidyaButtonActionPerformed(evt);
            }
        });
        jPanel1.add(vidyaButton);
        vidyaButton.setBounds(510, 0, 150, 140);
        vidyaButton.setOpaque(false);
        vidyaButton.setContentAreaFilled(false);
        vidyaButton.setBorderPainted(false);
        vidyaButton.setFocusPainted(false);
        vidyaButton.setBorder(new RoundedBorder(10));

        studyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/study.png"))); // NOI18N
        studyButton.setToolTipText("Go crazy trying to understand polyatomic ions.");
        studyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        studyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                studyButtonActionPerformed(evt);
            }
        });
        jPanel1.add(studyButton);
        studyButton.setBounds(340, 0, 150, 140);
        studyButton.setOpaque(false);
        studyButton.setContentAreaFilled(false);
        studyButton.setBorderPainted(false);
        studyButton.setFocusPainted(false);
        studyButton.setBorder(new RoundedBorder(10));

        partayButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/partay.png"))); // NOI18N
        partayButton.setToolTipText("PARRRRRTAAAAAAAY!!!!!YYAAAAWOOOOOOOOOO");
        partayButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        partayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partayButtonActionPerformed(evt);
            }
        });
        jPanel1.add(partayButton);
        partayButton.setBounds(170, 0, 150, 140);
        partayButton.setOpaque(false);
        partayButton.setContentAreaFilled(false);
        partayButton.setBorderPainted(false);
        partayButton.setFocusPainted(false);
        partayButton.setBorder(new RoundedBorder(10));

        lectureButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/lecture.png"))); // NOI18N
        lectureButton.setToolTipText("Try not to fall asleep in class.");
        lectureButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lectureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lectureButtonActionPerformed(evt);
            }
        });
        jPanel1.add(lectureButton);
        lectureButton.setBounds(0, 0, 150, 140);
        lectureButton.setOpaque(false);
        lectureButton.setContentAreaFilled(false);
        lectureButton.setBorderPainted(false);
        lectureButton.setFocusPainted(false);
        lectureButton.setBorder(new RoundedBorder(10));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dorm.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(0, 0, 1370, 770);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1366, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        final ImageIcon icon = new ImageIcon("src/main/java/resources/finnlogo.png");
        Image image2 = icon.getImage().getScaledInstance(130,100,0);
        JOptionPane.showMessageDialog(null, "You have 12 days to maintain your grades and your happiness.\nYou can go to class, party, study, game... It's all up to you. That's called \"being an adult.\"\nRemember, the end of the semester is in 12 days. So shape up your grades and remember to have fun.\nGood luck out there...", "That's the breaks!", JOptionPane.PLAIN_MESSAGE, new ImageIcon(image2));
    }//GEN-LAST:event_formWindowOpened

    private void vidyaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vidyaButtonActionPerformed
        // TODO add your handling code here:
        VideoGame.main();
        levels instance = levels.getInstance();
        thehappy = instance.retrieveHappiness();
        happinessmeter.setValue(thehappy);
        happinessmeter.setStringPainted(true);
        day++;
        Integer intermediate = (Integer)day;
        daynumbertext.setText(intermediate.toString());
    }//GEN-LAST:event_vidyaButtonActionPerformed

    private void studyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_studyButtonActionPerformed
        // TODO add your handling code here:
        Study.main();
        levels instance = levels.getInstance();
        thehappy = instance.retrieveHappiness();
        happinessmeter.setValue(thehappy);
        happinessmeter.setStringPainted(true);
        day++;
        Integer intermediate = (Integer)day;
        daynumbertext.setText(intermediate.toString());
    }//GEN-LAST:event_studyButtonActionPerformed

    private void partayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partayButtonActionPerformed
        // TODO add your handling code here:
        Party.main();
        levels instance = levels.getInstance();
        thehappy = instance.retrieveHappiness();
        happinessmeter.setValue(thehappy);
        happinessmeter.setStringPainted(true);
        day++;
        Integer intermediate = (Integer)day;
        daynumbertext.setText(intermediate.toString());
    }//GEN-LAST:event_partayButtonActionPerformed

    private void lectureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lectureButtonActionPerformed
        // TODO add your handling code here:
        Lecture.main();
        levels instance = levels.getInstance();
        thehappy = instance.retrieveHappiness();
        happinessmeter.setValue(thehappy);
        happinessmeter.setStringPainted(true);
        day++;
        Integer intermediate = (Integer)day;
        daynumbertext.setText(intermediate.toString());
    }//GEN-LAST:event_lectureButtonActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        howmanytimeswindowfocused++;
        levels instance = levels.getInstance();
        thehappy = instance.retrieveHappiness();
        happinessmeter.setValue(thehappy);
        happinessmeter.setStringPainted(true);
        System.out.println(thehappy);
        thegrades = instance.retrieveGrades();
        System.out.println("this is grade" + thegrades);
        if(thegrades >= 90){
            try {
                gradeicon.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/gradeA.png"))));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        if((thegrades>=80)&&(thegrades<90)){
            try {
                gradeicon.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/gradeB.png"))));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        if((thegrades>=70)&&(thegrades<80)){
            try {
                gradeicon.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/gradeC.png"))));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        if((thegrades>=60)&&(thegrades<70)){
            try {
                gradeicon.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/gradeD.png"))));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        if(thegrades<60){
            try {
                gradeicon.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/gradeF.png"))));
            } catch (IOException ex) {
                ex.printStackTrace();
            }
        }
        if((thegrades+thehappy)<=80){
            playermusic z = playermusic.getInstance();
            if(z.getPlayingNow().equals("src/main/java/resources/sad.mp3")){
            } else{
            z.Stop();
            z.Play("src/main/java/resources/sad.mp3");
            }
            if(theretrieved==0){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/bluedudesad.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            if(theretrieved==1){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/pinkdudesad.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            if(theretrieved==2){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/yellowdudesad.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
        if(((thegrades+thehappy)<120)&&((thegrades+thehappy)>80)){
            playermusic z = playermusic.getInstance();
            if(z.getPlayingNow().equals("src/main/java/resources/mid.mp3")){
            } else{
            z.Stop();
            z.Play("src/main/java/resources/mid.mp3");
            }
        }
        if(((thegrades+thehappy)<145)&&((thegrades+thehappy)>=120)&&(howmanytimeswindowfocused>2)){
            playermusic z = playermusic.getInstance();
            if(z.getPlayingNow().equals("src/main/java/resources/alright.mp3")){
            } else{
            z.Stop();
            z.Play("src/main/java/resources/alright.mp3");
            }
            }
        if((thegrades+thehappy)>=145){
            playermusic z = playermusic.getInstance();
            if(z.getPlayingNow().equals("src/main/java/resources/cool.mp3")){
            } else{
            z.Stop();
            z.Play("src/main/java/resources/cool.mp3");
            }
            }
        if(thehappy<=0){
            
            final ImageIcon icon = new ImageIcon("src/main/java/resources/finnlogo.png");
            Image image2 = icon.getImage().getScaledInstance(130,100,0);
            JOptionPane.showMessageDialog(null, "Oh no! You fell into a depressive state and dropped out.\nDo not forget to take care of your mental health next time.", "Happiness Too Low", JOptionPane.PLAIN_MESSAGE, new ImageIcon(image2));
            dispose();
            LosingScreen.main();
            return;
        }
        if(thehappy<=20){
            if(theretrieved==0){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/bluedudesad.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            if(theretrieved==1){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/pinkdudesad.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            if(theretrieved==2){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/yellowdudesad.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
           
        }
        if((thehappy>20)&&(thehappy<75)){
            if(theretrieved==0){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/bluedude.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            if(theretrieved==1){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/pinkdude.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            if(theretrieved==2){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/yellowdude.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
        if(thehappy>=75){
            if(theretrieved==0){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/blueduderad.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            if(theretrieved==1){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/pinkduderad.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
            if(theretrieved==2){
                try { 
                    charactermiddle.setIcon(new ImageIcon(ImageIO.read(new File("src/main/java/resources/yellowduderad.png"))));
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        }
        if(day==13){
            playermusic z = playermusic.getInstance();
            z.Stop();
            final ImageIcon icon = new ImageIcon("src/main/java/resources/finnlogo.png");
            Image image2 = icon.getImage().getScaledInstance(130,100,0);
            JOptionPane.showMessageDialog(null, "The semester is over! Let's see how you did.", "Results", JOptionPane.PLAIN_MESSAGE, new ImageIcon(image2));
            if((thehappy>0)&&(thegrades>69)){
                z.Play("src/main/java/resources/victory.mp3");
                dispose();
                WinningScreen.main();
            } else{
                dispose();
                JOptionPane.showMessageDialog(null, "Your subpar grades led you to fail your classes.", "Results", JOptionPane.PLAIN_MESSAGE, new ImageIcon(image2));
                LosingScreen.main();
            }
        }
    }//GEN-LAST:event_formWindowGainedFocus

    /**
     * 
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WhereThingsHappen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WhereThingsHappen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WhereThingsHappen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WhereThingsHappen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WhereThingsHappen().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel calendar;
    private javax.swing.JLabel charactermiddle;
    private javax.swing.JLabel daynumbertext;
    private javax.swing.JLabel gradeicon;
    private javax.swing.JLabel gradestext;
    private javax.swing.JProgressBar happinessmeter;
    private javax.swing.JLabel happinesstext;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton lectureButton;
    private javax.swing.JButton partayButton;
    private javax.swing.JButton studyButton;
    private javax.swing.JButton vidyaButton;
    // End of variables declaration//GEN-END:variables
}
